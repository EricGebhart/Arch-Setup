#!/bin/bash

help(){
    printf "Presents a checklist of packages from the official Arch repo,\n"
    printf "the AUR, and the packages in the arch-pkgs subdirectory.\n"
    printf "Additionally installs configuration repositories.\n"
    printf "\n "
    printf "The actual work is in the Makefile. It handles the dependencies\n"
    printf "and knows how to install from the arch-pkgs repo (another make) or\n"
    printf "the AUR or a regular repo with a Makefile.\n"
    printf "The official repo is accessed by the meta-packages in arch-pkgs\n"
    printf "The aur packages are installed directly by the Makefile. \n"
    printf "Make calls make for each of the configuration repos as needed.\n"
    printf "\n "
    printf "In reality this is just a nice front end to the Makefile.\n"
    printf "You may almost as easily install everthing as you wish from \n"
    printf "the command line by using make. Doing that will give much more\n"
    printf "granular control.\n"
    printf "\n "
    printf "Some options require sudo. Just rerun this and choose only them,\n"
    printf "Or run them directly with sudo make.\n"
    printf "\n "
    printf "Options: \n"
    printf "  -h  This help text.\n"
    exit
}

# $opt will hold the current option
opt=''
while getopts h opt; do
    # loop continues till options finished
    # see which pattern $opt matches...
    case $opt in
        (h)
            help
            ;;
	# matches a question mark
	# (and nothing else, see text)
        (\?)
            printf "Bad option:" # $*
            printf " "
            help
            return 1
            ;;
    esac
done

(( OPTIND > 1 )) && shift $(( OPTIND - 1 ))

### Set up logging ###
exec 1> >(tee "pkg-install.log")
exec 2> >(tee "pkg-install.log")

# create a menu.
cmd=(dialog --stdout --separate-output --checklist "Select Packages to install" 22 77 16)
options=(
    1 "Necessities - shells, utilities, ssh, traceroute, yay, etc." on
    2 "X11 - xorg, libreOffice, vivaldi, etc."    on
    3 "Xmonad - Haskell, polybar, etc." on
    4 "dot files - (.zsh, .Xresources, .icons, ~/bin,  etc" on
    5 "Emacs config with accomplices (isync, mu4e,...)"  on
    6 "Emacs config sans accomplices"  off
    7 "Xfce"   off
    8 "development - clojure, python, ruby, racket, guile, etc."  on
    9 "Tablet - Pen stuff - krita, cellwriter, onboard..." on
    10 "Natural language - hunspell, languagetool, ..."   on
    11 "Mobile Studio Pro - Nvidia, hidpi"  off
    12 "High DPI screen, .Xresources mods, Resolution 3840x2160"    on
    13 "Xmonad Xsession (requires sudo)"    off
    14 "Account setup - dotfiles, emacs, Xmonad" off
    15 "Anbox - run android in a container" off
    16 "Enable Anbox - configure and enable the anbox daemons (requires sudo)" off
    17 "Particle CLI - particle.io-cli, dfu-util, python..." off

    18 "All"    off )

# display menu and get the choices
choices=$("${cmd[@]}" "${options[@]}")
# clear

for choice in ${choices[@]}
do
    case $choice in
        1)
            make base
            ;;
        2)
            make X11
            ;;
        3)
            make xmonad-setup
            ;;
        4)
            make dotfiles
            ;;
        5)
            make emacs-setup-w-extras
            ;;
        6)
            make emacs-setup
            ;;
        7)
            make Xfce
            ;;
        8)
            make devel
            ;;
        9)
            make tablet
            ;;
        10)
            make natural-language
            ;;
        11)
            make mobile-studio-pro
            ;;
        12)
            make hidpi
            ;;
        13)
            make -C xmonad-setup xsession
            ;;
        14)
            make account
            ;;
        15)
            make anbox
            ;;
        16)
            make -C dotfiles enable-anbox
            ;;
        17)
            make particleCLI
            ;;
        18)
            make all
            ;;
    esac
done
